<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 扫描activiti在线编辑器的跳转@RestController -->
	<context:component-scan base-package="com.zh.*" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<!-- ==================== Activiti配置 start =================== -->
	<!-- 单例json对象 -->
	<bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper"/>

	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer"
		  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:properties/jdbc.properties" />
	</bean>

	<bean id="dataSource3" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="driverClassName" value="${driver1}" />
		<property name="url" value="${url1}" />
		<property name="username" value="${username1}" />
		<property name="password" value="${password1}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${maxActive}"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${minIdle}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${maxWait}"></property>
		<!-- 配置监控统计拦截的filters，wall用于防止sql注入，stat用于统计分析 -->
		<property name="filters" value="wall,stat" />
	</bean>

	<bean id="transactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource3"/>
	</bean>

	<!-- 配置 Annotation 驱动，扫描@Transactional注解的类定义事务  -->
	<tx:annotation-driven transaction-manager="transactionManager"/>

	<!-- activiti的processEngine配置 -->
	<bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
		<property name="dataSource" ref="dataSource3"/>
		<property name="transactionManager" ref="transactionManager"/>
		<!-- 没有表创建表 -->
		<property name="databaseSchemaUpdate" value="true"/>
		<!-- 是否激活Activiti的任务调度 -->
		<property name="jobExecutorActivate" value="false"/>
		<property name="processDefinitionCacheLimit" value="10"/>
		<!-- 生成流程图的字体 -->
		<property name="activityFontName" value="宋体"/>
		<property name="labelFontName" value="宋体"/>
	</bean>

	<!-- 加载activiti引擎processEngine -->
	<bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean" destroy-method="destroy">
		<property name="processEngineConfiguration" ref="processEngineConfiguration"/>
	</bean>

	<!-- activiti的7大服务接口 -->
	<bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService"/>
	<bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService"/>
	<bean id="taskService" factory-bean="processEngine" factory-method="getTaskService"/>
	<bean id="formService" factory-bean="processEngine" factory-method="getFormService"/>
	<bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService"/>
	<bean id="managementService" factory-bean="processEngine" factory-method="getManagementService"/>
	<bean id="identityService" factory-bean="processEngine" factory-method="getIdentityService"/>
	<!-- ==================== Activiti配置 end =================== -->
</beans>
